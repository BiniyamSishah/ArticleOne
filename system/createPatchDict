/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  6                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      createPatchDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

pointSync false;

// Patches to create.
patches
(
    {
        // Name of new patch
        name left;

        // Dictionary to construct new patch from
        patchInfo
        {
            //type patch;
            type cyclic;

            neighbourPatch right;
            transform translational;
           // separationVector (-0.211264 0 0);
            separationVector (-0.210560000019699 0 0);
            // Optional non-default tolerance to be able to define cyclics
            // on bad meshes
             matchTolerance 0.1;
        }

        // How to construct: either from 'patches' or 'set'
        constructFrom patches;

        // If constructFrom = patches : names of patches. Wildcards allowed.
        patches ("left1");
    }

    {
        // Name of new patch
        name right;

        // Dictionary to construct new patch from
        patchInfo
        {
            //type patch;
            type cyclic;

            neighbourPatch left;
            //neighbourPatch minZ;

            transform translational;
            separationVector (0.210560000019699 0 0);
           // separationVector (0.211264 0 0);

            // Optional non-default tolerance to be able to define cyclics
            // on bad meshes
            matchTolerance 0.1;
        }

        // How to construct: either from 'patches' or 'set'
        constructFrom patches;

        // If constructFrom = patches : names of patches. Wildcards allowed.
        patches ("right1");
        }

   
     {
        name bottomWall;
        patchInfo
        {
            type wall;
        }
        constructFrom patches;
        patches ("bottomwall1");
     }

     {
        name freeStream;
        patchInfo
        {
            type symmetry;
        }
        constructFrom patches;
        patches ("freestream1");
     }
);

// ************************************************************************* //
